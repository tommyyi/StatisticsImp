package com.ty.statisticsimp.dao;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;

import java.util.Map;

import de.greenrobot.dao.AbstractDao;
import de.greenrobot.dao.AbstractDaoSession;
import de.greenrobot.dao.identityscope.IdentityScopeType;
import de.greenrobot.dao.internal.DaoConfig;

import com.ty.statisticsimp.dao.UrlEntity;

import com.ty.statisticsimp.dao.UrlEntityDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see de.greenrobot.dao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private static DaoSession daoSession;
    private final DaoConfig urlEntityDaoConfig;

    private final UrlEntityDao urlEntityDao;

    protected DaoSession(SQLiteDatabase db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig> daoConfigMap) {
        super(db);

        urlEntityDaoConfig = daoConfigMap.get(UrlEntityDao.class).clone();
        urlEntityDaoConfig.initIdentityScope(type);

        urlEntityDao = new UrlEntityDao(urlEntityDaoConfig, this);

        registerDao(UrlEntity.class, urlEntityDao);
    }

    public static DaoSession getSession(Context mContext, String dbName)
    {
        if (daoSession == null)
        {
            DaoMaster.DevOpenHelper devOpenHelper = new DaoMaster.DevOpenHelper(mContext, dbName, null);
            SQLiteDatabase writableDatabase = devOpenHelper.getWritableDatabase();
            DaoMaster daoMaster = new DaoMaster(writableDatabase);
            daoSession = daoMaster.newSession();
        }
        return daoSession;
    }

    public void clear() {
        urlEntityDaoConfig.getIdentityScope().clear();
    }

    public UrlEntityDao getUrlEntityDao() {
        return urlEntityDao;
    }

}
